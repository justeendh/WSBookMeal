@using BookMeal.Models;
@using WiseOffice;
@using System.Text.RegularExpressions;
@model List<COMB_SET>
@{ 
    COMB_SET ComboSelected = ViewBag.ComboSelected as COMB_SET;
    List<COMB_MON> lstComboMonHangSelected = ViewBag.lstComboMonHangSelected as List<COMB_MON>;
    Dictionary<string, MON_HANG> lstTenMonSelected = ViewBag.ChitietMonSelected as Dictionary<string, MON_HANG>;
    Guid KeyBanMam = (Guid)ViewBag.KeyBanMam;
    bool EditComboSet = Session["DA_PHA_CHE_COBO_" + KeyBanMam.ToString()] != null ? !((bool)Session["DA_PHA_CHE_COBO_" + KeyBanMam.ToString()]) : true;
    Regex re = new Regex("[!#$%&'()*+,./:;<=>?@[\\]^`{|}~]");
}
@if (Model.Count == 0)
{
    <div class="data-empty text-center" style="border: 10px solid #fafafa;margin-left: -15px;margin-right: -15px;">
        <h4>Hiện tại không có combo nào</h4>
    </div>
}
<div class="row">
    @foreach (var itemComboset in Model)
    {
        <div class="meal-item col-xs-12 col-sm-12 col-md-12">
            <div class="pull-right">
                @{
                    if (EditComboSet)
                    {
                        if (ComboSelected == null || ComboSelected.KEY_COMB_SET != itemComboset.KEY_COMB_SET)
                        {
                            <div class="btn btn-lg btn-success" onclick="SelectComboSet('@itemComboset.KEY_COMB_SET');">
                                <i class="fa fa-check"></i> Chọn
                            </div>
                        }
                        else
                        {
                            <div class="btn btn-lg btn-danger" onclick="UnselectComboSet('@itemComboset.KEY_COMB_SET');">
                                <i class="fa fa-times"></i> Bỏ chọn
                            </div>
                        }
                    }
                    else
                    {
                        if (ComboSelected != null && ComboSelected.KEY_COMB_SET == itemComboset.KEY_COMB_SET)
                        {
                            <div class="btn btn-lg btn-success">
                                <i class="fa fa-check"></i> Đã chọn
                            </div>
                        }
                    }
                }
            </div>
            <div>
                <div style="margin-right: 90px;"><h4 style="margin: 0;"><strong>@itemComboset.TEN_COMB_SET</strong></h4></div>                
                <div class="text-nowrap">@itemComboset.GIA_COMB_SET.Value.ToString("###,###,###,##0")</div>
                <div style="margin-top: 5px;">
                    <div style="font-style: italic;">
                        @{ 
                            List<COMB_MON> lstComboMonHangThisCombo = lstComboMonHangSelected.Where(a => a.KEY_COMB_SET == itemComboset.KEY_COMB_SET).ToList();
                            for(int i = 0; i < lstComboMonHangThisCombo.Count; i++)
                            {
                                <span class="label label-danger">@lstComboMonHangThisCombo[i].SO_LUONG_MON.Value.ToString("0") @lstTenMonSelected[lstComboMonHangThisCombo[i].KEY_MON_HANG.ToString()].TEN_MON_HANG</span>
                            
                            }
                        }
                    </div>
                </div>
            </div>
            <div style="clear: both;"></div>
        </div>
     }
</div>

<script>

    function AddQuantityMonHang(targetupdate) {
        var value = $(targetupdate).val();
        $(targetupdate).val(parseInt(value) + 1);
    }

    function MinusQuantityMonHang(targetupdate)
    {
        var value = $(targetupdate).val();
        if (parseInt(value) > 1) $(targetupdate).val(parseInt(value) - 1);
    }

    function AddMonHang(keymonhang, KeyNote, targetupdate) {
        $.post("/home/addmonhang", { tableid: "@KeyBanMam", keymonhang: keymonhang, KeyNote: KeyNote}, function (data, status) {
            if (data.success)
            {
                $(targetupdate).text(data.quantity);
            }
        });
    }

    function MinusMonHang(keymonhang, KeyNote, targetupdate)
    {
        $.post("/home/minusmonhang", { tableid: "@KeyBanMam", keymonhang: keymonhang, KeyNote: KeyNote}, function (data, status) {
            if (data.success)
            {
                $(targetupdate).text(data.quantity);
            }
        });
    }

    function SelectComboSet(KeyComboSet)
    {
        $.post("/home/selectcomboset", { tableid: "@KeyBanMam", KeyComboSet: KeyComboSet }, function (data, status) {
            if (data.success)
            {
                Loadlistcombo();
            }
        });
    }

    function UnselectComboSet(KeyComboSet)
    {
        $.post("/home/unselectcomboset", { tableid: "@KeyBanMam" }, function (data, status) {
            if (data.success)
            {
                Loadlistcombo();
            }
        });
    }

    function OnSuccessaddbillmealitem(data)
    {
        if (data.success) $(".modal_addmon").modal("hide");
        else alert("Đã có lỗi xảy ra khi thêm món. Vui lòng thử lại sau");
    }

    $('.modal_addmon').on('hidden.bs.modal', function () {
        LoadItemInGroup($("#CurrentNhomSelected").val());
    })

    $('.modal_updatemon').on('hidden.bs.modal', function () {
        LoadItemInGroup($("#CurrentNhomSelected").val());
    })
</script>